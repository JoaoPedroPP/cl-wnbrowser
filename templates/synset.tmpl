 /** -*- mode: html -*- */

{namespace cl-wnbrowser.Templates}

{template synset-ref}

     {if isarray($synsets)}
     {foreach $s in $synsets}
       {if not isFirst($s)}, {/if}
       <a href="synset?id={$s.id}">{$s.name}</a>
     {/foreach}
     {/if}  

{/template}

{template describe-relation}

     {if isNonnull($synsets)}
         <li>{$description}: 
         [ {call synset-ref}{param synsets: $synsets /}{/call} ]
         </li>
     {/if}

{/template}


{template synset}
{call header}
   {param extratitle: $doc_id /}
   {param term: $term /}
{/call}

    <p>[ <a href="https://github.com/own-pt/openWordnet-PT/wiki" target="_blank">Doc</a> | <a href="https://github.com/own-pt/cl-wnbrowser" target="_blank">Source</a> | <a href="search-activities">Activity</a> | <a href="stats">Stats</a>  |

      {if isNonnull($login)}
      <b>{$login}</b>
      {else}
      <a href="https://github.com/login/oauth/authorize?client_id={$githubid}&redirect_uri={$callbackuri}">Login</a>
      {/if}
      | API version <b>{$info.version}</b>
      ]</p>


<div class="synsetprops">

  {if isNonnull($doc_ids)}
  <div class="breadcrumb">
    <ul class="breadcrumb">
      {foreach $doc_id in $doc_ids}
      <li class="breadcrumb"><a href="synset?id={$doc_id}">{synsetworden($doc_id)}</a></li>
      {/foreach}
    </ul>
  </div>
  {/if}
  
  <h2>{$doc_id}</h2>

  <h3>English</h3>

  <p><i>{$gloss_en}</i></p>

  <p>
    {foreach $w in $word_en}
    {if not isFirst($w)}{sp}&bull;{sp}{/if}
    <span class="enword">{$w}</span>
    {/foreach}
  </p>

  <h3>Portuguese</h3>

  <script type="text/javascript">
    var del_words = [];
    var add_words = [];
    var add_gloss = [];
    var del_gloss = [];
    var add_ex = [];
    var del_ex = [];

    {foreach $w in $word_pt}
      add_words.push('{$w}'.trim());
    {/foreach}
    
    {if isNonnull($suggestions)}

      {foreach $s in $suggestions}
    
        {if $s.action == 'add-word-pt'}
          add_words.push('{$s.params}'.trim());
        {/if}
        {if $s.action == 'remove-word-pt'}
          del_words.push('{$s.params}'.trim());
        {/if}
        {if $s.action == 'add-example-pt'}
          add_ex.push('{$s.params}'.trim());
        {/if}
        {if $s.action == 'remove-example-pt'}
          del_ex.push('{$s.params}'.trim());
        {/if}
        {if $s.action == 'add-gloss-pt'}
          add_gloss.push('{$s.params}'.trim());
        {/if}
        {if $s.action == 'remove-gloss-pt'}
          del_gloss.push('{$s.params}'.trim());
        {/if}
    
      {/foreach}
    {/if}
  </script>
  
  {literal}
  <script>
    function validate(form, words)
    {
      var v = form.elements["params"].value.trim();
    
      if (words.indexOf(v) >= 0)
      {
        alert("Suggestion already made.");
        return false;
      }

      if (v.length < 1)
      {
        alert("Invalid suggestion.");
        return false;
      }
                     
      return true;
    }
  </script>
  {/literal}
  
  <p>
    Gloss: <i>
      {if isNonnull($gloss_pt)}
      {foreach $g in $gloss_pt}
      {if not isFirst($g)}{sp}&bull;{sp}{/if}
      {if insuggestions($g, $suggestions, 'remove-gloss-pt')}<strike>{/if}{$g}{if insuggestions($g, $suggestions, 'remove-gloss-pt')}</strike>{/if}
      
      {if isNonnull($login) and (not insuggestions($g, $suggestions, 'remove-gloss-pt'))}
      [<a title="Suggest removing this gloss" href="/wn/process-suggestion?id={$doc_id}&doc_type=synset&type=remove-gloss-pt&params={$g}&return-uri={urlencode($returnuri)}">x</a>]
      {/if}
      {/foreach}
      {else}
      empty gloss
      {/if}
    </i>

    {if isNonnull($login)}
    <form action="/wn/process-suggestion" onsubmit="return validate(this, add_gloss)">
      <input type="hidden" name="type" value="add-gloss-pt">
      <input type="hidden" name="return-uri" value="{urlencode($returnuri)}">
      <input type="hidden" name="id" value="{$doc_id}">
      <input type="hidden" name="doc_type" value="synset">
      <input type="text" size="60" name="params">
      <input type="submit" value="Suggest new gloss">
    </form>
    {/if}

  </p>

  <p>
    Ex.: <i>
      {if isNonnull($example_pt)}
      {foreach $e in $example_pt}
      {if not isFirst($e)}{sp}&bull;{sp}{/if}
      {if insuggestions($e, $suggestions, 'remove-example-pt')}<strike>{/if}{$e}{if insuggestions($e, $suggestions, 'remove-example-pt')}</strike>{/if}

      {if isNonnull($login) and (not insuggestions($e, $suggestions, 'remove-example-pt'))}
      [<a title="Suggest removing this example" href="/wn/process-suggestion?id={$doc_id}&doc_type=synset&type=remove-example-pt&params={$e}&return-uri={urlencode($returnuri)}">x</a>]
      {/if}
      {/foreach}
      {else}
      empty example
      {/if}
    </i>

    {if isNonnull($login)}
    <form action="/wn/process-suggestion" onsubmit="return validate(this, add_ex)">
      <input type="hidden" name="type" value="add-example-pt">
      <input type="hidden" name="return-uri" value="{urlencode($returnuri)}">
      <input type="hidden" name="id" value="{$doc_id}">
      <input type="hidden" name="doc_type" value="synset">
      <input type="text" name="params" size="60">
      <input type="submit" value="Suggest new example">
    </form>
    {/if}

  </p>


  <p>
    {foreach $w in $word_pt}
    {if not isFirst($w)}{sp}&bull;{sp}{/if}
    <span class="ptbrword">
      {if insuggestions($w, $suggestions, 'remove-word-pt')}<strike>{/if}{$w}{if insuggestions($w, $suggestions, 'remove-word-pt')}</strike>{/if}

      {if isNonnull($login) and (not insuggestions($w, $suggestions, 'remove-word-pt'))}
      [<a title="Suggest removing this word" href="/wn/process-suggestion?id={$doc_id}&doc_type=synset&type=remove-word-pt&params={$w}&return-uri={urlencode($returnuri)}">x</a>]
      {/if}
    </span>
    {ifempty}<i>[ empty word list ]</i>
    {/foreach}
    {if isNonnull($login)}
    <form action="/wn/process-suggestion" onsubmit="return validate(this, add_words)">
      <input type="hidden" name="return-uri" value="{urlencode($returnuri)}">
      <input type="hidden" name="type" value="add-word-pt">
      <input type="hidden" name="id" value="{$doc_id}">
      <input type="hidden" name="doc_type" value="synset">
      <input type="text" name="params">
      <input type="submit" value="Suggest new word">
    </form>
    {/if}
  </p>

  <h3>Relations</h3>

  <ul>
    <li>Lexicographer file: {$wn30_lexicographerfile}</li>

    {if isNonnull($wn30_frame)}
    <li>Frame: {$wn30_frame}</li>
    {/if}

    <li>RDF Type: {$rdf_type}</li>

    {if isNonnull($relatednomlexes)}
    <li>Nomlexes: 
      {foreach $nl in $relatednomlexes}
      {if not isFirst($nl)}, {/if}
      <a href="nomlex?id={$nl}">{$nl}</a>
      {/foreach}
    </li>
    {/if}

    <!-- some sample relations -->

    {call describe-relation}
      {param description: 'Hypernym of' /}
      {param synsets: $wn30_hypernymofexpanded /}
    {/call}

    {call describe-relation}
      {param description: 'Hyponym of' /}
      {param synsets: $wn30_hyponymofexpanded /}
    {/call}

    {call describe-relation}
      {param description: 'Part holonym of' /}
      {param synsets: $wn30_partholonymofexpanded /}
    {/call}

    {call describe-relation}
      {param description: 'Part meronym of' /}
      {param synsets: $wn30_partmeronymofexpanded /}
    {/call}

    {call describe-relation}
      {param description: 'Member holonym of' /}
      {param synsets: $wn30_memberholonymofexpanded /}
    {/call}

    {call describe-relation}
      {param description: 'Member meronym of' /}
      {param synsets: $wn30_membermeronymofexpanded /}
    {/call}

    {call describe-relation}
      {param description: 'Substance holonym of' /}
      {param synsets: $wn30_substanceholonymofexpanded /}
    {/call}

    {call describe-relation}
      {param description: 'Substance meronym of' /}
      {param synsets: $wn30_substancemeronymofexpanded /}
    {/call}

    {call describe-relation}
      {param description: 'Similar to' /}
      {param synsets: $wn30_similartoexpanded /}
    {/call}

    {call describe-relation}
      {param description: 'See also' /}
      {param synsets: $wn30_seealsoexpanded /}
    {/call}

    {call describe-relation}
      {param description: 'Instance of' /}
      {param synsets: $wn30_instanceofexpanded /}
    {/call}

    {call describe-relation}
      {param description: 'Has instance' /}
      {param synsets: $wn30_hasinstanceexpanded /}
    {/call}

    {call describe-relation}
      {param description: 'Attribute' /}
      {param synsets: $wn30_attributeexpanded /}
    {/call}

    {call describe-relation}
      {param description: 'Causes' /}
      {param synsets: $wn30_causesexpanded /}
    {/call}

    {call describe-relation}
      {param description: 'Same verb group as' /}
      {param synsets: $wn30_sameverbgroupasexpanded /}
    {/call}

    {call describe-relation}
      {param description: 'Entails' /}
      {param synsets: $wn30_entailsexpanded /}
    {/call}

    {call describe-relation}
      {param description: 'Classified by region' /}
      {param synsets: $wn30_classifiedbyregionexpanded /}
    {/call}

    {call describe-relation}
      {param description: 'Classified by topic' /}
      {param synsets: $wn30_classifiedbytopicexpanded /}
    {/call}

    {call describe-relation}
      {param description: 'Classified by usage' /}
      {param synsets: $wn30_classifiedbyusageexpanded /}
    {/call}

    {call describe-relation}
      {param description: 'Classifies by region' /}
      {param synsets: $wn30_classifiesbyregionexpanded /}
    {/call}

    {call describe-relation}
      {param description: 'Classifies by topic' /}
      {param synsets: $wn30_classifiesbytopicexpanded /}
    {/call}

    {call describe-relation}
      {param description: 'Classifies by usage' /}
      {param synsets: $wn30_classifiesbyusageexpanded /}
    {/call}

  </ul>

  <h3>External resources</h3>
  <ul>
    <li><a href="http://compling.hss.ntu.edu.sg/omw/cgi-bin/wn-gridx.cgi?synset={$doc_id}" target="_blank">OMW</a>
    </li>
    <li><a href="http://54.183.42.206:8080/sigma/WordNet.jsp?synset={synsetidtosumo($doc_id)}&kb=SUMO&flang=SUO-KIF&lang=EnglishLanguage&kb=SUMO" target="_blank">SUMO</a></li>
    <li><a href="http://wordnet-rdf.princeton.edu/wn30/{$doc_id}" target="_blank">Princeton</a></li>
  </ul>

  {if isNonnull($debug)}
  <hr/>
  <p><tt>{$synset}</tt></p>
  {/if}

  {literal}
  <script src="http://code.jquery.com/jquery-2.1.3.min.js"></script>
  <script src="/wn/st/voting.js"></script>
  </script>
  {/literal}
  
  {if isNonnull($suggestions)}
  <h3>Suggestions</h3>
  <a href="#suggestions"></a>
  <table class="suggestions">
    <tr><th>Votes</th><th>Action</th><th>Content</th><th>User (prov.)</th><th>Age</th><th>Status</th><th>Action</th></tr>
    
    {foreach $s in $suggestions}
    {if isNonnull($login)}
    <script>
    registerVote('{getdocid($s)}', '{getvoteid($login, $s.votes.positive_votes)}', '{getvoteid($login, $s.votes.negative_votes)}');
    </script>
    {/if}
    <tr>
      <td>
        {if isNonnull($login) and isauthorizedvote($login) and ($s.status == 'new')}
        <div class="midcol">
          
          <div id="vote-up-{getdocid($s)}" role="button" class="arrow {if alreadyvoted($login, $s.votes.positive_votes)}upmod{else}up{/if}" onclick="voteup('{getdocid($s)}')"></div>
          
          <div id="vote-down-{getdocid($s)}" role="button" class="arrow {if alreadyvoted($login, $s.votes.negative_votes)}downmod{else}down{/if}" onclick="votedown('{getdocid($s)}')"></div>
          
        </div>
        {/if}
        
        <div class="votes"><b><a href="javascript://" onclick="toggle_visibility('vote-details-{getdocid($s)}')"><span id="total-{getdocid($s)}">{$s.votes.total}</span></a></b> (<span id="positive-{getdocid($s)}">{$s.votes.positive}</span>/<span id="negative-{getdocid($s)}">{$s.votes.negative}</span>)</div>

        <div id="vote-details-{getdocid($s)}" style="display: none">
        {if (isNonnull($s.votes.positive_votes) or isNonnull($s.votes.negative_votes))}
        <ul>
          <li id="warning" style="display: none"><i>Refresh the page for the updated list</i></li>
          {if isNonnull($s.votes.positive_votes)}
          <li>
            <b>Agree:</b>
            {foreach $u in $s.votes.positive_votes}
            {if not isFirst($u)}, {/if}
            {$u.user}
            {/foreach}
          </li>
          {/if}

          {if isNonnull($s.votes.negative_votes)}
          <li>
            <b>Disagree:</b>
            {foreach $u in $s.votes.negative_votes}
            {if not isFirst($u)}, {/if}
            {$u.user}
            {/foreach}
          </li>
          {/if}

        </ul>
        {/if}
        </div>
      </td>
      <td><tt>{$s.action}</tt></td><td>{$s.params}</td><td>{$s.user} ({$s.provenance})</td>
      <td>{prettydate($s.date)}</td>
      <td>{$s.status}</td>
      <td>
        {if validstatus($s.status) and (isself($login, $s.user) or isauthorizedapprove($login))}
        <a href="/wn/delete-suggestion?id={getdocid($s)}&return-uri={urlencode($returnuri)}" title="Delete suggestion">del</a>
	{else}
	del
        {/if}
      </td>
    </tr>
    {/foreach}
  </table>
  {/if}

  {if isNonnull($comments) or isNonnull($login)}
  <h3>Comments</h3>
  
  {foreach $c in $comments}
  <p><b>{$c.user}</b>: {$c.params} ({prettydate($c.date)})
    {if isself($login, $c.user) or isauthorizedapprove($login)}
    [<a href="/wn/delete-comment?id={getdocid($c)}&return-uri={urlencode($returnuri)}">del</a>]
    {/if}
  </p>
  {/foreach}
  
    {if isNonnull($login)}
    <form action="/wn/process-comment">
      <input type="hidden" name="id" value="{$doc_id}">
      <input type="hidden" name="return-uri" value="{urlencode($returnuri)}">
      <input type="hidden" name="doc_type" value="synset">
      <textarea rows="4" cols="80" name="text"></textarea>
      <br>
      <input type="submit" value="Add comment">
    </form>
    {/if}

  {/if}
  

</div>

{call footer /}
{/template}
