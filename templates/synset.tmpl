/** -*- mode: html -*- */

{namespace cl-wnbrowser.Templates}

{template synset-ref}

     {if isarray($synsets)}
     {foreach $s in $synsets}
       {if not isFirst($s)}, {/if}
       <a href="synset?id={$s.id}">{$s.name}</a>
     {/foreach}
     {/if}  

{/template}

{template describe-relation}

     {if isNonnull($synsets)}
         <li>{$description}: 
         [ {call synset-ref}{param synsets: $synsets /}{/call} ]
         </li>
     {/if}

{/template}


{template synset}
{call header}
   {param extratitle: $id /}
   {param term: $term /}
{/call}

<div class="synsetprops">

  {if isNonnull($ids)}
  <div class="breadcrumb">
    <ul class="breadcrumb">
      {foreach $id in $ids}
      <li class="breadcrumb"><a href="synset?id={$id}">{synsetworden($id)}</a></li>
      {/foreach}
    </ul>
  </div>
  {/if}
  
  <h2>{$id}</h2>

  <h3>English</h3>

  <p><i>{$gloss_en}</i></p>

  <p>
    {foreach $w in $word_en}
    {if not isFirst($w)}{sp}&bull;{sp}{/if}
    <span class="enword">{$w}</span>
    {/foreach}
  </p>

  <h3>Portuguese</h3>

  <p>
    Gloss: <i>
      {if isNonnull($gloss_pt)}
      {foreach $g in $gloss_pt}
      {if not isFirst($g)}{sp}&bull;{sp}{/if}
      {$g}
      {if isNonnull($login)}
      [<a title="Suggest removing this gloss" href="/wn/process-suggestion?id={$id}&doc_type=synset&type=remove-gloss-pt&param={$g}">x</a>]
      {/if}
      {/foreach}
      {else}
      empty gloss
      {/if}
    </i>

    {if isNonnull($login)}
    <form action="/wn/process-suggestion">
      <input type="hidden" name="type" value="add-gloss-pt">
      <input type="hidden" name="id" value="{$id}">
      <input type="hidden" name="doc_type" value="synset">
      <input type="text" name="param">
      <input type="submit" value="Suggest new gloss">
    </form>
    {/if}

  </p>

  <p>
    Ex.: <i>
      {if isNonnull($example_pt)}
      {foreach $e in $example_pt}
      {if not isFirst($e)}{sp}&bull;{sp}{/if}
      {$e}
      {if isNonnull($login)}
      [<a title="Suggest removing this example" href="/wn/process-suggestion?id={$id}&doc_type=synset&type=remove-example-pt&param={$e}">x</a>]
      {/if}
      {/foreach}
      {else}
      empty example
      {/if}
    </i>

    {if isNonnull($login)}
    <form action="/wn/process-suggestion">
      <input type="hidden" name="type" value="add-example-pt">
      <input type="hidden" name="id" value="{$id}">
      <input type="hidden" name="doc_type" value="synset">
      <input type="text" name="param">
      <input type="submit" value="Suggest new example">
    </form>
    {/if}

  </p>


  <p>
    {foreach $w in $word_pt}
    {if not isFirst($w)}{sp}&bull;{sp}{/if}
    <span class="ptbrword">{$w}
      {if isNonnull($login)}
      [<a title="Suggest removing this word" href="/wn/process-suggestion?id={$id}&doc_type=synset&type=remove-word-pt&param={$w}">x</a>]
      {/if}
    </span>
    {ifempty}<i>[ empty word list ]</i>
    {/foreach}

    {if isNonnull($login)}
    <form action="/wn/process-suggestion">
      <input type="hidden" name="type" value="add-word-pt">
      <input type="hidden" name="id" value="{$id}">
      <input type="hidden" name="doc_type" value="synset">
      <input type="text" name="param">
      <input type="submit" value="Suggest new word">
    </form>
    {/if}
  </p>

  <h3>Relations</h3>

  <ul>
    <li>Lexicographer file: {$wn30_lexicographerfile}</li>

    {if isNonnull($wn30_frame)}
    <li>Frame: {$wn30_frame}</li>
    {/if}

    <li>RDF Type: {$rdf_type}</li>

    {if isNonnull($relatednomlexes)}
    <li>Nomlexes: 
      {foreach $nl in $relatednomlexes}
      {if not isFirst($nl)}, {/if}
      <a href="nomlex?id={$nl}">{$nl}</a>
      {/foreach}
    </li>
    {/if}

    <!-- some sample relations -->

    {call describe-relation}
      {param description: 'Classified by usage' /}
      {param synsets: $wn30_classifiedbyusageexpanded /}
    {/call}

    {call describe-relation}
      {param description: 'Hypernym of' /}
      {param synsets: $wn30_hypernymofexpanded /}
    {/call}

    {call describe-relation}
      {param description: 'Hyponym of' /}
      {param synsets: $wn30_hyponymofexpanded /}
    {/call}

    {call describe-relation}
      {param description: 'Part holonym of' /}
      {param synsets: $wn30_partholonymofexpanded /}
    {/call}

    {call describe-relation}
      {param description: 'Part meronym of' /}
      {param synsets: $wn30_partmeronymofexpanded /}
    {/call}

    {call describe-relation}
      {param description: 'Member holonym of' /}
      {param synsets: $wn30_memberholonymofexpanded /}
    {/call}

    {call describe-relation}
      {param description: 'Member meronym of' /}
      {param synsets: $wn30_membermeronymofexpanded /}
    {/call}

    {call describe-relation}
      {param description: 'Substance holonym of' /}
      {param synsets: $wn30_substanceholonymofexpanded /}
    {/call}

    {call describe-relation}
      {param description: 'Substance meronym of' /}
      {param synsets: $wn30_substancemeronymofexpanded /}
    {/call}

    {call describe-relation}
      {param description: 'Similar to' /}
      {param synsets: $wn30_similartoexpanded /}
    {/call}

    {call describe-relation}
      {param description: 'See also' /}
      {param synsets: $wn30_seealsoexpanded /}
    {/call}

    {call describe-relation}
      {param description: 'Instance of' /}
      {param synsets: $wn30_instanceofexpanded /}
    {/call}

    {call describe-relation}
      {param description: 'Has instance' /}
      {param synsets: $wn30_hasinstanceexpanded /}
    {/call}

    {call describe-relation}
      {param description: 'Attribute' /}
      {param synsets: $wn30_attributeexpanded /}
    {/call}

    {call describe-relation}
      {param description: 'Causes' /}
      {param synsets: $wn30_causesexpanded /}
    {/call}

    {call describe-relation}
      {param description: 'Same verb group as' /}
      {param synsets: $wn30_sameverbgroupasexpanded /}
    {/call}

    {call describe-relation}
      {param description: 'Entails' /}
      {param synsets: $wn30_entailsexpanded /}
    {/call}

    {call describe-relation}
      {param description: 'Classified by region' /}
      {param synsets: $wn30_classifiedbyregionexpanded /}
    {/call}

    {call describe-relation}
      {param description: 'Classified by topic' /}
      {param synsets: $wn30_classifiedbytopicexpanded /}
    {/call}

    {call describe-relation}
      {param description: 'Classified by usage' /}
      {param synsets: $wn30_classifiedbyusageexpanded /}
    {/call}

    {call describe-relation}
      {param description: 'Classifies by region' /}
      {param synsets: $wn30_classifiesbyregionexpanded /}
    {/call}

    {call describe-relation}
      {param description: 'Classifies by topic' /}
      {param synsets: $wn30_classifiesbytopicexpanded /}
    {/call}

    {call describe-relation}
      {param description: 'Classifies by usage' /}
      {param synsets: $wn30_classifiesbyusageexpanded /}
    {/call}

  </ul>

  <h3>External resources</h3>
  <ul>
    <li><a href="http://compling.hss.ntu.edu.sg/omw/cgi-bin/wn-gridx.cgi?synset={$id}" target="_blank">OMW</a>
    </li>
    <li><a href="http://sigma-01.cim3.net:8080/sigma/WordNet.jsp?synset={synsetidtosumo($id)}&kb=SUMO&flang=SUO-KIF&lang=EnglishLanguage&kb=SUMO">SUMO</a></li>
  </ul>

  <!-- lexfile, links, noun, pos, rdf_type, status, text, verb -->
  {if isNonnull($debug)}
  <hr/>
  <p><tt>{$synset}</tt></p>
  {/if}

  {if isNonnull($suggestions)}
  <h3>Suggestions</h3>

  <table>
    <tr><th>Action</th><th>Content</th><th>User (prov.)</th><th>Status</th><th>Action</th></tr>
    
    {foreach $s in $suggestions}
    <tr>
      <td><tt>{$s.action}</tt></td><td>{$s.params}</td><td>{$s.user} ({$s.provenance})</td><td>{$s.status}</td>
      <td>
        {if validstatus($s.status) and (isself($login, $s.user) or isauthorized($login))}
        <a href="/wn/delete-suggestion?id={getdocid($s)}" title="Delete suggestion">del</a> |
        <a href="/wn/accept-suggestion?id={getdocid($s)}" title="Accept suggestion">acc</a> |
        <a href="/wn/reject-suggestion?id={getdocid($s)}" title="Reject suggestion">rej</a>
        {else}
        n/a
        {/if}
      </td>
    </tr>
    {/foreach}
  </table>
  {/if}

  {if isNonnull($comments) or isNonnull($login)}
  <h3>Comments</h3>
  
  {foreach $c in $comments}
  <p><b>{$c.user}</b>: {$c.params} ({prettydate($c.date)})
    {if isself($login, $c.user) or isauthorized($login)}
    [<a href="/wn/delete-comment?id={getdocid($c)}">del</a>]
    {/if}
  </p>
  {/foreach}
  
    {if isNonnull($login)}
    <form action="/wn/process-comment">
      <input type="hidden" name="id" value="{$id}">
      <input type="hidden" name="doc_type" value="synset">
      <textarea rows="4" cols="80" name="text"></textarea>
      <br>
      <input type="submit" value="Add comment">
    </form>
    {/if}

  {/if}
  

</div>

<hr>
[
      {if isNonnull($login)}
      <b>{$login}</b>
      {else}
      <a href="https://github.com/login/oauth/authorize?client_id={$githubid}">login</a>
      {/if}
]

{call footer /}
{/template}
